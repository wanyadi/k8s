apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql
  #namespace: default
  labels:
    app: mysql
data:
  my.cnf: |-
    [client]
    default-character-set=utf8mb4
    [mysql]
    default-character-set=utf8mb4
    [mysqld] 
    character-set-server = utf8mb4  
    collation-server = utf8mb4_unicode_ci  
    init_connect='SET NAMES utf8mb4'  
    skip-character-set-client-handshake = true  
    max_connections=2000
    secure_file_priv=/var/lib/mysql
    bind-address=0.0.0.0
    symbolic-links=0
    sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'

---
apiVersion: v1
kind: ReplicationController
metadata:
  name: mysql
  labels:
    name: mysql
spec:
  replicas: 1
  selector:
    name: mysql
  template:
    metadata:
      name: mysql
      labels:
        name: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        #command: ['--character-set-server=utf8mb4','--collation-server=utf8mb4_unicode_ci','--default-authentication-plugin=mysql_native_password']
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3306
        env:
        - name: TZ
          value: "Asia/Shanghai"
        - name: MYSQL_ROOT_PASSWORD
          value: "JJeIJhB9Sxlh"
        - name: MYSQL_ROOT_HOST
          value: '%'
        volumeMounts:
        #- mountPath: /var/lib/mysql
        #  name: model-db-storage
        - name: config
          mountPath: /etc/mysql/conf.d/my.cnf
          subPath: my.cnf
      volumes:
      #- name: model-db-storage
      #  persistentVolumeClaim:
      #    claimName: model-db-pv-claim
      - name: config      
        configMap:
          name: mysql
      - name: localtime
        hostPath:
          type: File
          path: /etc/localtime

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    name: mysql
  ports:
  - port: 3306
    targetPort: 3306
